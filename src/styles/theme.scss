
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-test-primary: mat.define-palette(mat.$indigo-palette);
$app-test-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-test-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-test-theme: mat.define-light-theme((
  color: (
    primary: $app-test-primary,
    accent: $app-test-accent,
    warn: $app-test-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
// @include mat.all-component-themes($app-test-theme);


$plt-background: map-get($app-test-theme, background);
$plt-foreground: map-get($app-test-theme, foreground);

$p-keys: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900;
$a-keys: (100: A100, 200: A200, 400: A400, 700: A700, 500 : 500);


@mixin app-test-theme {
  @include mat.core();
  @include mat.all-component-themes($app-test-theme);

  :root {
    @each $key in $p-keys {
      --p-#{$key}: #{map-get($plt-primary, $key)};
    }


    @each $key, $value in $a-keys {
      --a-#{$key}: #{map-get($plt-accent, $value)};
    }


    @each $key, $value in $plt-background {
      --b-#{$key}: #{$value};
    }


    @each $key, $value in $plt-foreground {
      --f-#{$key}: #{$value};
    }


  }
}


